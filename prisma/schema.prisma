generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            UserRole?
  contactNo       String
  address         String
  profileImg      String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  reviewAndRating ReviewAndRating[]
  Order           Order[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  book      Book[]

  @@map("categories")
}

model Book {
  id              String            @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate DateTime
  categoryId      String
  category        Category          @relation(fields: [categoryId], references: [id])
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ReviewAndRating ReviewAndRating[]
  orderedBook     OrderedBook[]

  @@map("books")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("review_rating")
}

model Order {
  id          String        @id @default(uuid())
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  status      Status?       @default(pending)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  orderedBook OrderedBook[]

  @@map("orders")
}

model OrderedBook {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id])
  quantity  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ordered_books")
}

enum UserRole {
  admin
  customer
}

enum Status {
  pending
  shipped
  delivered
}
